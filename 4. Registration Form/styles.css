/*
---------------------------IMPORTANT SECTIONS OF THE PROJECT:---------------------------
8. vh
 9. Horizontal scroll-bar
 12. method form post
 16. rem unit, display: block for labels so they are in different blocks, 
 18. For is used for linking a label with an input element.
 19. Type is used for knowing what kind of data it should expect. 
 20. Input button submit
 21. Required attribute doesnt allow to send a form without the required information in an input field
 22. minlength is used for preventing inputs of less than 8 characters
 23. Or, we can use a regex with the attribute "pattern"
 28. To relate radio inputs, we give them the same name attribute. So the user can't select the two at the same time
 32. Min and max are used to limit number restrictions
 33. Dropdown list added with 5 options
 36. Every option needs a value for the server (This is just because of good practices)
 37. textarea added
 39. Rows and columns added
 40. Placeholder attribute to textarea
 41. Name added
 45. Remove fieldset border and modifyng padding
 46. Applyng a style to a select an element based on the given attribute value. Ex:
    input[name="password"] or input[type="submit"]
    With that, you can style an specific element
 61. Browsers inject their own css properties
 */

body {
    width: 100%;
    height: 100vh; /*vh means viewport height, and is relative to 1% of the height of the viewport*/
    margin: 0; /*Get rid of the horizontal scroll-bar*/
    background-color: #1b1b32;
    color: #f5f6f7;
    font-family: Tahoma;
    font-size: 16px;
}

h1,
p {
    margin: 1em auto;
    text-align: center;
}

form {
    width: 60vw;
    max-width: 500px;
    min-width: 300px;
    margin: 0 auto; /*This is how we center our form*/
    padding-bottom: 2em;
}

fieldset {
    border: none;
    padding: 2rem 0; /*rem stands for root em, being relative to the font size of the html element */
    border-bottom: 3px solid #3b3b4f; /*We apply bottom borders to the fieldsets, which contains parts of our form*/
}

fieldset:last-of-type {
    border-bottom: none;
}

label {
    display: block;
    margin: 0.5rem 0;
}

input,
textarea,
select {
    margin: 10px 0 0 0;
    width: 100%;
    min-height: 2em;
}

input,
textarea {
    background-color: #0a0a23;
    border: 1px solid #0a0a23;
    color: #ffffff;
}

.inline {
    width: unset;
    margin: 0 0.5em 0 0;
    vertical-align: middle;
}

/*
Applyng a style to a select an element based on the given attribute value. Ex:
    input[name="password"] or input[type="submit"]
    With that, you can style an specific element
*/
input[type="submit"] {
    display: block; /*This makes to treat the element as a block and not as an in-line element*/
    width: 60%;
    margin: 1em auto;
    height: 2em;
    font-size: 1.1rem;
    background-color: #3b3b4f;
    border-color: white;
    min-width: 300px;
}

input[type="file"] {
    padding: 1px 2px;
}

a {
    color: #dfdfe2
}